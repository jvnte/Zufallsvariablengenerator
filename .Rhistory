caption  = "Data Source: https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide")
animate(anim, nframes = 250,fps = 15,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
######################################
TargetDate <- as.Date("2020-03-15")
covid %>%
filter(DateRep <= TargetDate) %>%
group_by(Countries_and_territories) %>%
summarise(TotalCases = sum(Cases)) %>%
filter(TotalCases > 1000) %>%
mutate(Countries_and_territories = fct_reorder(Countries_and_territories, TotalCases, .desc = FALSE)) %>%
ggplot(aes(x = Countries_and_territories, y = TotalCases)) +
geom_bar(stat = "identity") +
coord_flip() +
transition_states()
table(covid$Rank)
covid <- covid %>% filter(Rank <= 10)
table(covid$Rank)
covid %>%
ggplot(aes(Rank, group = Countries_and_territories)) +
geom_tile(aes(y = CumCases/2,
height = CumCases,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Countries_and_territories, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=CumCases,label = CumCases, hjust=0)) +
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal() +
transition_states(DateRep, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out') +
labs(title = 'Number of COVID-19 cases worldwide at {closest_state}',
caption  = "Data Source: https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide")
table(covid$DateRep)
# https://towardsdatascience.com/https-towardsdatascience-com-everything-you-need-to-know-about-animated-bar-charts-be033f398619
library(tidyverse)
library(leaflet)
library(caret)
library(shiny)
library(shinythemes)
library(gganimate)
library(gifski)
library(png)
setwd("~/GitHub/Visualizations")
covid <- read_csv("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide-2020-03-24.csv")
coords <- read_csv("worldcities_coordinates_adjusted.csv")
# Quick check
#glimpse(covid)
#glimpse(coords)
# Rename column countries and territories
names(covid)[7] <- "Countries_and_territories"
# Rename GeoId NA into NAM
covid <- covid %>% mutate(GeoId = ifelse(is.na(GeoId), "NAM", GeoId))
# Create ID column
covid <- covid %>% mutate(ID = 1:nrow(covid)) %>% .[,c(9, 1:8)]
# Convert DateRep into date object
covid <- covid %>% mutate(DateRep = as.Date(DateRep, format = "%d/%m/%Y"))
# Join Coords over GeoId and iso2
covid <-
covid %>%
left_join(., (coords %>% select(iso2, lat, lng)), by = c("GeoId" = "iso2"))
# Convert char into factor
covid <- mutate_if(covid, is.character, as.factor)
# Aggregated Cases
all_GeoIds <- unique(covid$GeoId)
new_df <- data.frame()
for( idx in all_GeoIds ){
new_entries <-
covid %>%
filter(GeoId == idx) %>%
mutate(CumCases = rev(cumsum(rev(Cases))),
CumDeaths = rev(cumsum(rev(Deaths)))) %>%
select(ID, CumCases, CumDeaths)
new_df <-
rbind(new_df, new_entries)
}
covid <- covid %>% left_join(., new_df, by = c("ID" = "ID"))
# Create rank column
all_Dates <- unique(covid$DateRep)
new_df <- data.frame()
for( idx in all_Dates ){
new_entries <-
covid %>%
filter(DateRep == idx) %>%
arrange(desc(CumCases)) %>%
mutate(Rank = 1:n()) %>%
select(ID, Rank)
new_df <-
rbind(new_df, new_entries)
}
covid <- covid %>% left_join(., new_df, by = c("ID" = "ID"))
covid <- covid %>% filter(Rank <= 10)
anim <-
covid %>%
ggplot(aes(Rank, group = Countries_and_territories)) +
geom_tile(aes(y = CumCases/2,
height = CumCases,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Countries_and_territories, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=CumCases,label = CumCases, hjust=0)) +
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal() +
transition_states(DateRep, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out') +
labs(title = 'Number of COVID-19 cases worldwide at {closest_state}',
caption  = "Data Source: ...")
animate(anim, nframes = 350,fps = 25,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <-
covid %>%
ggplot(aes(Rank, group = Countries_and_territories)) +
geom_tile(aes(y = CumCases/2,
height = CumCases,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Countries_and_territories, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=CumCases,label = CumCases, hjust=0)) +
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="red", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="red"),
plot.caption =element_text(size=12, hjust=0.5, face="italic", color="red"),
plot.background=element_blank()) +
transition_states(DateRep, transition_length = 4, state_length = 1) +
ease_aes('sine-in-out') +
labs(title = 'Number of COVID-19 cases worldwide at {closest_state}',
caption  = "Data Source: https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide")
animate(anim, nframes = 350,fps = 25,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
# https://towardsdatascience.com/https-towardsdatascience-com-everything-you-need-to-know-about-animated-bar-charts-be033f398619
library(tidyverse)
library(leaflet)
library(caret)
library(shiny)
library(shinythemes)
library(gganimate)
library(gifski)
library(png)
setwd("~/GitHub/Visualizations")
covid <- read_csv("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide-2020-03-24.csv")
coords <- read_csv("worldcities_coordinates_adjusted.csv")
# Quick check
#glimpse(covid)
#glimpse(coords)
# Rename column countries and territories
names(covid)[7] <- "Countries_and_territories"
# Rename GeoId NA into NAM
covid <- covid %>% mutate(GeoId = ifelse(is.na(GeoId), "NAM", GeoId))
# Create ID column
covid <- covid %>% mutate(ID = 1:nrow(covid)) %>% .[,c(9, 1:8)]
# Convert DateRep into date object
covid <- covid %>% mutate(DateRep = as.Date(DateRep, format = "%d/%m/%Y"))
# Join Coords over GeoId and iso2
covid <-
covid %>%
left_join(., (coords %>% select(iso2, lat, lng)), by = c("GeoId" = "iso2"))
# Convert char into factor
covid <- mutate_if(covid, is.character, as.factor)
# Aggregated Cases
all_GeoIds <- unique(covid$GeoId)
new_df <- data.frame()
for( idx in all_GeoIds ){
new_entries <-
covid %>%
filter(GeoId == idx) %>%
mutate(CumCases = rev(cumsum(rev(Cases))),
CumDeaths = rev(cumsum(rev(Deaths)))) %>%
select(ID, CumCases, CumDeaths)
new_df <-
rbind(new_df, new_entries)
}
covid <- covid %>% left_join(., new_df, by = c("ID" = "ID"))
# Create rank column
all_Dates <- unique(covid$DateRep)
new_df <- data.frame()
for( idx in all_Dates ){
new_entries <-
covid %>%
filter(DateRep == idx) %>%
arrange(desc(CumCases)) %>%
mutate(Rank = 1:n()) %>%
select(ID, Rank)
new_df <-
rbind(new_df, new_entries)
}
covid <- covid %>% left_join(., new_df, by = c("ID" = "ID"))
covid <- covid %>% filter(Rank <= 10)
anim <-
covid %>%
ggplot(aes(Rank, group = Countries_and_territories)) +
geom_tile(aes(y = CumCases/2,
height = CumCases,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Countries_and_territories, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=CumCases,label = CumCases, hjust=0)) +
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="red", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="red"),
plot.caption =element_text(size=12, hjust=0.5, face="italic", color="red"),
plot.background=element_blank()) +
transition_states(DateRep, transition_length = 10, state_length = 6) +
ease_aes('sine-in-out') +
labs(title = 'Number of COVID-19 cases worldwide at {closest_state}',
caption  = "Data Source: https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide")
animate(anim, nframes = 350,fps = 25,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <-
covid %>%
ggplot(aes(Rank, group = Countries_and_territories)) +
geom_tile(aes(y = CumCases/2,
height = CumCases,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Countries_and_territories, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=CumCases,label = CumCases, hjust=0)) +
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="red", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="red"),
plot.caption =element_text(size=12, hjust=0.5, face="italic", color="red"),
plot.background=element_blank()) +
transition_states(DateRep, transition_length = 15, state_length = 10) +
ease_aes('sine-in-out') +
labs(title = 'Number of COVID-19 cases worldwide at {closest_state}',
caption  = "Data Source: https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide")
animate(anim, nframes = 350,fps = 25,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <-
covid %>%
ggplot(aes(Rank, group = Countries_and_territories)) +
geom_tile(aes(y = CumCases/2,
height = CumCases,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Countries_and_territories, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=CumCases,label = CumCases, hjust=0)) +
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="red", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="red"),
plot.caption =element_text(size=12, hjust=0.5, face="italic", color="red"),
plot.background=element_blank()) +
transition_states(DateRep, transition_length = 4, state_length = 3) +
ease_aes('sine-in-out') +
labs(title = 'Number of COVID-19 cases worldwide at {closest_state}',
caption  = "Data Source: https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide")
animate(anim, nframes = 350,fps = 25,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
?transition_states
anim <-
covid %>%
ggplot(aes(Rank, group = Countries_and_territories)) +
geom_tile(aes(y = CumCases/2,
height = CumCases,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Countries_and_territories, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=CumCases,label = CumCases, hjust=0)) +
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="red", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="red"),
plot.caption =element_text(size=12, hjust=0.5, face="italic", color="red"),
plot.background=element_blank()) +
transition_states(DateRep, transition_length = 4, state_length = 6) +
ease_aes('sine-in-out') +
labs(title = 'Number of COVID-19 cases worldwide at {closest_state}',
caption  = "Data Source: https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide")
animate(anim, nframes = 350,fps = 25,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <-
covid %>%
ggplot(aes(Rank, group = Countries_and_territories)) +
geom_tile(aes(y = CumCases/2,
height = CumCases,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Countries_and_territories, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=CumCases,label = CumCases, hjust=0)) +
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="red", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="red"),
plot.caption =element_text(size=12, hjust=0.5, face="italic", color="red"),
plot.background=element_blank(),
plot.margin = margin(1,4,1, 8, "cm")) +
transition_states(DateRep, transition_length = 4, state_length = 6) +
ease_aes('sine-in-out') +
labs(title = 'Number of COVID-19 cases worldwide at {closest_state}',
caption  = "Data Source: https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide")
animate(anim, nframes = 350,fps = 25,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <-
covid %>%
ggplot(aes(Rank, group = Countries_and_territories)) +
geom_tile(aes(y = CumCases/2,
height = CumCases,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Countries_and_territories, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=CumCases,label = CumCases, hjust=0)) +
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="red", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="red"),
plot.caption =element_text(size=12, hjust=0.5, face="italic", color="red"),
plot.background=element_blank(),
plot.margin = margin(1,4,1, 8, "cm")) +
transition_states(DateRep, transition_length = 4, state_length = 12) +
ease_aes('sine-in-out') +
labs(title = 'Number of COVID-19 cases worldwide at {closest_state}',
caption  = "Data Source: https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide")
animate(anim, nframes = 350,fps = 25,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <-
covid %>%
ggplot(aes(Rank, group = Countries_and_territories)) +
geom_tile(aes(y = CumCases/2,
height = CumCases,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Countries_and_territories, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=CumCases,label = CumCases, hjust=0)) +
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="red", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="red"),
plot.caption =element_text(size=12, hjust=0.5, face="italic", color="red"),
plot.background=element_blank(),
plot.margin = margin(1,4,1, 8, "cm")) +
transition_states(DateRep, transition_length = 4, state_length = 22) +
ease_aes('sine-in-out') +
labs(title = 'Number of COVID-19 cases worldwide at {closest_state}',
caption  = "Data Source: https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide")
animate(anim, nframes = 350,fps = 25,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <-
covid %>%
ggplot(aes(Rank, group = Countries_and_territories)) +
geom_tile(aes(y = CumCases/2,
height = CumCases,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Countries_and_territories, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=CumCases,label = CumCases, hjust=0)) +
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="red", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="red"),
plot.caption =element_text(size=12, hjust=0.5, face="italic", color="red"),
plot.background=element_blank(),
plot.margin = margin(1,4,1, 8, "cm")) +
transition_states(DateRep, transition_length = 22, state_length = 18) +
ease_aes('sine-in-out') +
labs(title = 'Number of COVID-19 cases worldwide at {closest_state}',
caption  = "Data Source: https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide")
animate(anim, nframes = 350,fps = 25,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim <-
covid %>%
ggplot(aes(Rank, group = Countries_and_territories)) +
geom_tile(aes(y = CumCases/2,
height = CumCases,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = 0, label = paste(Countries_and_territories, " ")), vjust = 0.2, hjust = 1) +
geom_text(aes(y=CumCases,label = CumCases, hjust=0)) +
coord_flip(clip = "off", expand = TRUE) +
scale_x_reverse() +
theme_minimal() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="red", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="red"),
plot.caption =element_text(size=12, hjust=0.5, face="italic", color="red"),
plot.background=element_blank(),
plot.margin = margin(1,4,1, 8, "cm")) +
transition_states(DateRep, transition_length = 10, state_length = 1) +
ease_aes('sine-in-out') +
labs(title = 'Number of COVID-19 cases worldwide at {closest_state}',
caption  = "Data Source: https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide")
animate(anim, nframes = 350,fps = 25,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
